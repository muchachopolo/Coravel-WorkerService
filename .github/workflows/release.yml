name: Release to NuGet

on:
  release:
    types: [published]
    
jobs:
  build:- name: Publish NuGet
  # You may pin to the exact commit or the version.
  # uses: brandedoutcast/publish-nuget@c12b8546b67672ee38ac87bea491ac94a587f7cc
  uses: brandedoutcast/publish-nuget@v2.5.5
  with:
    # Filepath of the project to be packaged, relative to root of repository
    PROJECT_FILE_PATH: WorkerService.csproj
    # NuGet package id, used for version detection & defaults to project name
    #PACKAGE_NAME: # optional
    # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
    #VERSION_FILE_PATH: # optional
    # Regex pattern to extract version info in a capturing group
    #VERSION_REGEX: # optional, default is ^\s*<Version>(.*)<\/Version>\s*$
    # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #VERSION_STATIC: # optional
    # Flag to toggle git tagging, enabled by default
    #TAG_COMMIT: # optional, default is true
    # Format of the git tag, [*] gets replaced with actual version
    #TAG_FORMAT: # optional, default is v*
    # API key to authenticate with NuGet server
    #NUGET_KEY: # optional
    # NuGet server uri hosting the packages, defaults to https://api.nuget.org
    #NUGET_SOURCE: # optional, default is https://api.nuget.org
    # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
    #INCLUDE_SYMBOLS: # optional
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
    - name: Build
      run: dotnet build -c Release
    - name: Test
      run: dotnet test -c Release --no-build
    - name: Pack nugets
      run: dotnet pack -c Release --no-build --output .
    - name: Push to NuGet
      run: dotnet nuget push "*.nupkg" --api-key ${{secrets.nuget_api_key}} --source https://api.nuget.org/v3/index.json
